    let challenge_accept: Result<ChallengeAccept, serde_json::Error> = serde_json::from_str(&challenge_accept_request);
    let challengeAccept = match challenge_accept {
        Ok(c) => c,
        Err(e) => {
            println!("error: {}", e);
            return Err(Status::BadRequest)
        }
    };

    // look up request in db
    let challenge = sqlx::query_as::<_,Challenge>( "SELECT * FROM challenge WHERE id=$1 LIMIT 1")
        .bind(challengeAccept.id)
        .fetch_one(&**pool).await;